Template Parameters:
Begin evaluating template '/ci-pipeline.yml'
Begin transform: poolDemands
Evaluating: value
Result: 'Agent.Name -equals nithish'
End transform: poolDemands
Begin transform: step
Evaluating: transform('stepToTaskBaseProperties', value)
Evaluating: arg0
Result: Object
Evaluating: in(pair['key'], 'condition', 'continueOnError', 'displayName', 'target', 'enabled', 'env', 'name', 'timeoutInMinutes', 'retryCountOnTaskFailure')
Expanded: in('script', 'condition', 'continueOnError', 'displayName', 'target', 'enabled', 'env', 'name', 'timeoutInMinutes', 'retryCountOnTaskFailure')
Result: False
Evaluating: in(pair['key'], 'condition', 'continueOnError', 'displayName', 'target', 'enabled', 'env', 'name', 'timeoutInMinutes', 'retryCountOnTaskFailure')
Expanded: in('displayName', 'condition', 'continueOnError', 'displayName', 'target', 'enabled', 'env', 'name', 'timeoutInMinutes', 'retryCountOnTaskFailure')
Result: True
Evaluating: pair['key']
Result: 'displayName'
Evaluating: pair['value']
Result: 'Check Node & npm versions'
Result: Object
Evaluating: value['script']
Result: 'node -v
npm -v
'
Evaluating: value['failOnStderr']
Expanded: Null
Result: False
Evaluating: value['workingDirectory']
Expanded: Null
Result: False
End transform: step
Begin transform: step
Evaluating: transform('stepToTaskBaseProperties', value)
Evaluating: arg0
Result: Object
Evaluating: in(pair['key'], 'condition', 'continueOnError', 'displayName', 'target', 'enabled', 'env', 'name', 'timeoutInMinutes', 'retryCountOnTaskFailure')
Expanded: in('script', 'condition', 'continueOnError', 'displayName', 'target', 'enabled', 'env', 'name', 'timeoutInMinutes', 'retryCountOnTaskFailure')
Result: False
Evaluating: in(pair['key'], 'condition', 'continueOnError', 'displayName', 'target', 'enabled', 'env', 'name', 'timeoutInMinutes', 'retryCountOnTaskFailure')
Expanded: in('displayName', 'condition', 'continueOnError', 'displayName', 'target', 'enabled', 'env', 'name', 'timeoutInMinutes', 'retryCountOnTaskFailure')
Result: True
Evaluating: pair['key']
Result: 'displayName'
Evaluating: pair['value']
Result: 'Install dependencies'
Result: Object
Evaluating: value['script']
Result: 'npm install
npm ci
'
Evaluating: value['failOnStderr']
Expanded: Null
Result: False
Evaluating: value['workingDirectory']
Expanded: Null
Result: False
End transform: step
Begin transform: step
Evaluating: transform('stepToTaskBaseProperties', value)
Evaluating: arg0
Result: Object
Evaluating: in(pair['key'], 'condition', 'continueOnError', 'displayName', 'target', 'enabled', 'env', 'name', 'timeoutInMinutes', 'retryCountOnTaskFailure')
Expanded: in('script', 'condition', 'continueOnError', 'displayName', 'target', 'enabled', 'env', 'name', 'timeoutInMinutes', 'retryCountOnTaskFailure')
Result: False
Evaluating: in(pair['key'], 'condition', 'continueOnError', 'displayName', 'target', 'enabled', 'env', 'name', 'timeoutInMinutes', 'retryCountOnTaskFailure')
Expanded: in('displayName', 'condition', 'continueOnError', 'displayName', 'target', 'enabled', 'env', 'name', 'timeoutInMinutes', 'retryCountOnTaskFailure')
Result: True
Evaluating: pair['key']
Result: 'displayName'
Evaluating: pair['value']
Result: 'Run unit tests'
Evaluating: in(pair['key'], 'condition', 'continueOnError', 'displayName', 'target', 'enabled', 'env', 'name', 'timeoutInMinutes', 'retryCountOnTaskFailure')
Expanded: in('env', 'condition', 'continueOnError', 'displayName', 'target', 'enabled', 'env', 'name', 'timeoutInMinutes', 'retryCountOnTaskFailure')
Result: True
Evaluating: pair['key']
Result: 'env'
Evaluating: pair['value']
Result: Object
Result: Object
Evaluating: value['script']
Result: 'npm test'
Evaluating: value['failOnStderr']
Expanded: Null
Result: False
Evaluating: value['workingDirectory']
Expanded: Null
Result: False
End transform: step
Begin transform: step
Evaluating: transform('stepToTaskBaseProperties', value)
Evaluating: arg0
Result: Object
Evaluating: in(pair['key'], 'condition', 'continueOnError', 'displayName', 'target', 'enabled', 'env', 'name', 'timeoutInMinutes', 'retryCountOnTaskFailure')
Expanded: in('script', 'condition', 'continueOnError', 'displayName', 'target', 'enabled', 'env', 'name', 'timeoutInMinutes', 'retryCountOnTaskFailure')
Result: False
Evaluating: in(pair['key'], 'condition', 'continueOnError', 'displayName', 'target', 'enabled', 'env', 'name', 'timeoutInMinutes', 'retryCountOnTaskFailure')
Expanded: in('displayName', 'condition', 'continueOnError', 'displayName', 'target', 'enabled', 'env', 'name', 'timeoutInMinutes', 'retryCountOnTaskFailure')
Result: True
Evaluating: pair['key']
Result: 'displayName'
Evaluating: pair['value']
Result: 'Create artifact (tar.gz)'
Result: Object
Evaluating: value['script']
Result: 'mkdir -p artifact
tar -czf artifact/app.tar.gz app.js server.js package.json package-lock.json
'
Evaluating: value['failOnStderr']
Expanded: Null
Result: False
Evaluating: value['workingDirectory']
Expanded: Null
Result: False
End transform: step
Begin transform: step
Evaluating: transform('stepToTaskBaseProperties', value)
Evaluating: arg0
Result: Object
Evaluating: in(pair['key'], 'condition', 'continueOnError', 'displayName', 'target', 'enabled', 'env', 'name', 'timeoutInMinutes', 'retryCountOnTaskFailure')
Expanded: in('publish', 'condition', 'continueOnError', 'displayName', 'target', 'enabled', 'env', 'name', 'timeoutInMinutes', 'retryCountOnTaskFailure')
Result: False
Evaluating: in(pair['key'], 'condition', 'continueOnError', 'displayName', 'target', 'enabled', 'env', 'name', 'timeoutInMinutes', 'retryCountOnTaskFailure')
Expanded: in('artifact', 'condition', 'continueOnError', 'displayName', 'target', 'enabled', 'env', 'name', 'timeoutInMinutes', 'retryCountOnTaskFailure')
Result: False
Result: Object
Evaluating: value['publish']
Result: 'artifact'
Evaluating: value['artifact']
Expanded: 'drop'
Result: True
Evaluating: value['artifact']
Result: 'drop'
End transform: step
Begin transform: step
Evaluating: transform('stepToTaskBaseProperties', value)
Evaluating: arg0
Result: Object
Evaluating: in(pair['key'], 'condition', 'continueOnError', 'displayName', 'target', 'enabled', 'env', 'name', 'timeoutInMinutes', 'retryCountOnTaskFailure')
Expanded: in('script', 'condition', 'continueOnError', 'displayName', 'target', 'enabled', 'env', 'name', 'timeoutInMinutes', 'retryCountOnTaskFailure')
Result: False
Evaluating: in(pair['key'], 'condition', 'continueOnError', 'displayName', 'target', 'enabled', 'env', 'name', 'timeoutInMinutes', 'retryCountOnTaskFailure')
Expanded: in('displayName', 'condition', 'continueOnError', 'displayName', 'target', 'enabled', 'env', 'name', 'timeoutInMinutes', 'retryCountOnTaskFailure')
Result: True
Evaluating: pair['key']
Result: 'displayName'
Evaluating: pair['value']
Result: 'Clean up workspace'
Result: Object
Evaluating: value['script']
Result: 'echo "Cleaning workspace..."
rm -rf artifact test-results node_modules
'
Evaluating: value['failOnStderr']
Expanded: Null
Result: False
Evaluating: value['workingDirectory']
Expanded: Null
Result: False
End transform: step
Begin transform: pipeline
Evaluating: value
Result: Object
Evaluating: notIn(pair['key'], 'strategy', 'continueOnError', 'pool', 'container', 'services', 'workspace', 'steps')
Expanded: notIn('name', 'strategy', 'continueOnError', 'pool', 'container', 'services', 'workspace', 'steps')
Result: True
Evaluating: pair['key']
Result: 'name'
Evaluating: pair['value']
Result: 'my-ci-pipeline'
Evaluating: notIn(pair['key'], 'strategy', 'continueOnError', 'pool', 'container', 'services', 'workspace', 'steps')
Expanded: notIn('trigger', 'strategy', 'continueOnError', 'pool', 'container', 'services', 'workspace', 'steps')
Result: True
Evaluating: pair['key']
Result: 'trigger'
Evaluating: pair['value']
Result: Object
Evaluating: notIn(pair['key'], 'strategy', 'continueOnError', 'pool', 'container', 'services', 'workspace', 'steps')
Expanded: notIn('pool', 'strategy', 'continueOnError', 'pool', 'container', 'services', 'workspace', 'steps')
Result: False
Evaluating: notIn(pair['key'], 'strategy', 'continueOnError', 'pool', 'container', 'services', 'workspace', 'steps')
Expanded: notIn('steps', 'strategy', 'continueOnError', 'pool', 'container', 'services', 'workspace', 'steps')
Result: False
Evaluating: value
Result: Object
Evaluating: in(pair['key'], 'strategy', 'continueOnError', 'pool', 'container', 'services', 'workspace', 'steps')
Expanded: in('name', 'strategy', 'continueOnError', 'pool', 'container', 'services', 'workspace', 'steps')
Result: False
Evaluating: in(pair['key'], 'strategy', 'continueOnError', 'pool', 'container', 'services', 'workspace', 'steps')
Expanded: in('trigger', 'strategy', 'continueOnError', 'pool', 'container', 'services', 'workspace', 'steps')
Result: False
Evaluating: in(pair['key'], 'strategy', 'continueOnError', 'pool', 'container', 'services', 'workspace', 'steps')
Expanded: in('pool', 'strategy', 'continueOnError', 'pool', 'container', 'services', 'workspace', 'steps')
Result: True
Evaluating: pair['key']
Result: 'pool'
Evaluating: pair['value']
Result: Object
Evaluating: in(pair['key'], 'strategy', 'continueOnError', 'pool', 'container', 'services', 'workspace', 'steps')
Expanded: in('steps', 'strategy', 'continueOnError', 'pool', 'container', 'services', 'workspace', 'steps')
Result: True
Evaluating: pair['key']
Result: 'steps'
Evaluating: pair['value']
Result: Object
End transform: pipeline
Finished evaluating template '/ci-pipeline.yml'
Load Time: 00:00:00.0061367
Estimated Memory: 23,330 bytes (Max: 20,971,520)
Parser Event Count: 1,065 (Max: 10,000,000)
Greatest Parser Depth: 14 (Max: 100)
File Count: 1 (Max: 100)
Greatest File Size: 1,689 (Max: 1,048,576)
